---
version: '{build}'
platform:
- x86
- x64
clone_depth: 50
cache:
- C:\tools\mingw32
- C:\tools\mingw64
environment:
  GIT_NAME:
    secure: onlJNy/nGFT1GXNdusL4jokojSPZ732EFaXwdhPnpM0=
  GIT_EMAIL:
    secure: RdTdiZIl3fnggJFH8JhmqT2TAg/23ENX/4sFCrJfQ3s=
  GH_TOKEN:
    secure: VP9a1Mu28nO7cN+RVyccA9bNvIG92pGQ0zgFjTIds62In6BdiIxj3FgIb8G3XR0K
  SF_KEY:
    secure: JgsjFoVAP5yjNxyS/+S+4byhtnTKCWfI3bkCmHws3P1MwSaUS5+0C6WV1pHIJTVW00Qvo3+JsgVqMYUJ7fo2m/bXvUPNCoSa4BifXZlS6bE=
  SF_API:
    secure: cc1q9CXo5BwIYqtgigHpkCGG90zEVM45xx/YzXTOjVp512oQNUzTJq0AmxEYXP78
  build_tree: mingw-Build
  config: Release
  URHO3D_D3D11: 1
  MINGW: 1
  x86_64-posix-seh: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/6.3.0/threads-posix/seh/x86_64-6.3.0-release-posix-seh-rt_v5-rev1.7z
  i686-posix-dwarf: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/6.3.0/threads-posix/dwarf/i686-6.3.0-release-posix-dwarf-rt_v5-rev1.7z
  matrix:
  - URHO3D_LIB_TYPE: STATIC
  - URHO3D_LIB_TYPE: SHARED
before_build:
- rake ci_timer
- set "APPVEYOR_REPO_COMMIT=%APPVEYOR_REPO_COMMIT%~"
- ps: $env:COMMIT_MESSAGE = $(git log --format=%B -n 1 $env:APPVEYOR_REPO_COMMIT);
    if ($env:APPVEYOR_REPO_TAG -eq "true") { $env:RELEASE_TAG = $env:APPVEYOR_REPO_TAG_NAME
    }; if ($env:RELEASE_TAG -or ($env:APPVEYOR_REPO_BRANCH -notmatch "[^-]+-[^-]+-CI"
    -and (select-string '\[ci package\]' -inputobject $env:COMMIT_MESSAGE))) { $env:PACKAGE_UPLOAD
    = "1"; do { "Installing doxygen and graphviz..."; choco install doxygen.portable
    graphviz.portable >$null } until ($?); } else { $env:URHO3D_TOOLS = "0"; iex ((new-object
    net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-desktop.ps1'))
    }
- if "%PLATFORM%" == "x64" (set "URHO3D_64BIT=1" && set "MINGW_URL=%x86_64-posix-seh%"
  && set "ARCH=64") else (set "MINGW_URL=%i686-posix-dwarf%" && set "ARCH=32")
- if not exist "C:\tools\mingw%ARCH%" curl -fsSL -o "mingw.7z" -O "%MINGW_URL%" &&
  7z x -y -o"C:\tools" "mingw.7z" >nul && echo "Installed MinGW compiler toolchain
  to C:\tools"
- set "PATH=C:\tools\mingw%ARCH%\bin;%PATH%"
build_script:
- rake ci && if "%PACKAGE_UPLOAD%" == "1" (rake ci_package_upload && move %build_tree%\*.zip
  . && rd /S /Q %build_tree%\_CPack_Packages)
- rake ci_timer
test: false
artifacts:
- path: .\*.zip
deploy: false
on_finish:
- if "%PLATFORM%:%URHO3D_LIB_TYPE%" == "x64:SHARED" rake ci_delete_mirror
